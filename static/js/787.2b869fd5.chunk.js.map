{"version":3,"file":"static/js/787.2b869fd5.chunk.js","mappings":"6RAGaA,EAAYC,EAAAA,GAAAA,IAAH,6GAMTC,GAA0BD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uF,SC8BpC,EAlCqB,WACnB,IAAQG,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACAC,EAAAA,GAAoBP,GADpB,QACZQ,EADY,SAGhBJ,EAAiBI,EAAIC,KAAKC,SAHV,2CAAH,qDAMjBJ,MACC,CAACN,IAEJW,QAAQC,IAAIT,IAGV,SAACP,EAAD,WACE,wBACGO,EAAcU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAb,OACjB,yBACE,UAAClB,EAAD,CAAyBmB,GAAE,aAA3B,UACGF,GAAI,gBACMA,EADN,mCAGJC,MALIF,Y,4ICrBNP,EAAMW,IAAAA,OAAa,CAC9BC,QCJU,oCDOCC,EAAY,mCAAG,WAAMC,GAAN,gGAEAd,EAAIe,IAAJ,8BACCD,EADD,iBAFA,YAElBE,EAFkB,iDAMfA,EAAUd,KAAKC,SANA,UAQc,IAAlCa,EAAUd,KAAKC,QAAQc,OARH,yCASfC,EAAAA,GAAAA,KACL,mUAVoB,kFAcjBA,EAAAA,GAAAA,KAAA,OAdiB,0DAAH,sDAkBZC,EAAe,mCAAG,WAAM1B,GAAN,gGAEAO,EAAIe,IAAJ,gDAFA,YAErBK,EAFqB,iDAMlBA,GANkB,UAQc,IAArCA,EAAalB,KAAKC,QAAQc,OARH,yCASlBC,EAAAA,GAAAA,KACL,mUAVuB,kFAcpBA,EAAAA,GAAAA,KAAA,OAdoB,0DAAH","sources":["pages/VariableAll/VariableAll.styled.js","pages/VariableAll/VariableAll.jsx","services/Api.jsx","constants/constants.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const WraperVar = styled.div`\n  display: inline-flex;\n  padding-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ItemLinkVariablesStyled = styled(NavLink)`\n  text-decoration: none;\n  &:hover {\n    color: green;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from 'services/Api';\nimport { ItemLinkVariablesStyled, WraperVar } from './VariableAll.styled';\n\nconst VariablesAll = () => {\n  const { variable } = useParams();\n  const [variablesInfo, setVariablesInfo] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const car = await api.getCarVariables(variable);\n      if (car) {\n        setVariablesInfo(car.data.Results);\n      }\n    };\n    fetchMovies();\n  }, [variable]);\n\n  console.log(variablesInfo);\n\n  return (\n    <WraperVar>\n      <ul>\n        {variablesInfo.map(({ ID, Name, Description }) => (\n          <li key={ID}>\n            <ItemLinkVariablesStyled to={`/variables`}>\n              {Name &&\n                `Name :${Name} \n                Description:`}\n              {Description}\n            </ItemLinkVariablesStyled>\n          </li>\n        ))}\n      </ul>\n    </WraperVar>\n  );\n};\n\nexport default VariablesAll;\n","import axios from 'axios';\nimport { constantsApi } from 'constants/constants';\nimport { toast } from 'react-toastify';\n\nexport const api = axios.create({\n  baseURL: constantsApi.BASE_URL,\n});\n\nexport const getDecodeVIN = async searchInput => {\n  try {\n    const decodeVin = await api.get(\n      `/vehicles/DecodeVin/${searchInput}?format=json`\n    );\n    if (decodeVin) {\n      return decodeVin.data.Results;\n    }\n    if (decodeVin.data.Results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getCarVariables = async variable => {\n  try {\n    const carVariables = await api.get(\n      `/vehicles/GetVehicleVariableList?format=json`\n    );\n    if (carVariables) {\n      return carVariables;\n    }\n    if (carVariables.data.Results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n","export const constantsApi = {\n  BASE_URL: 'https://vpic.nhtsa.dot.gov/api/',\n};\n"],"names":["WraperVar","styled","ItemLinkVariablesStyled","NavLink","variable","useParams","useState","variablesInfo","setVariablesInfo","useEffect","fetchMovies","api","car","data","Results","console","log","map","ID","Name","Description","to","axios","baseURL","getDecodeVIN","searchInput","get","decodeVin","length","toast","getCarVariables","carVariables"],"sourceRoot":""}