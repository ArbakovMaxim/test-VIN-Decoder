{"version":3,"file":"static/js/99.ef4353d8.chunk.js","mappings":"sRAEaA,EAAaC,EAAAA,GAAAA,IAAH,6G,GAMDA,EAAAA,GAAAA,IAAH,2DAKWA,EAAAA,GAAAA,IAAH,8CAIDA,EAAAA,GAAAA,KAAH,+C,QCkCvB,EA9CkB,WAChB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACAC,EAAAA,GAAoBP,GADpB,QACZQ,EADY,SAGhBJ,EAAiBI,EAAIC,MAHL,2CAAH,qDAMjBH,MACC,CAACN,IAEJU,QAAQC,IAAIR,IAGV,SAACL,EAAD,WACE,2BACE,yBACE,iDAEF,yBACE,2CAEE,4IAFF,UASF,yBACE,oBAEF,yBACE,oBAEF,yBACE,0B,4ICxCGS,EAAMK,IAAAA,OAAa,CAC9BC,QCJU,oCDOCC,EAAY,mCAAG,WAAMC,GAAN,gGAEAR,EAAIS,IAAJ,8BACCD,EADD,iBAFA,YAElBE,EAFkB,iDAMfA,EAAUR,KAAKS,SANA,UAQc,IAAlCD,EAAUR,KAAKS,QAAQC,OARH,yCASfC,EAAAA,GAAAA,KACL,mUAVoB,kFAcjBA,EAAAA,GAAAA,KAAA,OAdiB,0DAAH,sDAkBZC,EAAe,mCAAG,WAAMrB,GAAN,gGAEAO,EAAIS,IAAJ,gDAFA,YAErBM,EAFqB,iDAMlBA,GANkB,UAQc,IAArCA,EAAab,KAAKS,QAAQC,OARH,yCASlBC,EAAAA,GAAAA,KACL,mUAVuB,kFAcpBA,EAAAA,GAAAA,KAAA,OAdoB,0DAAH","sources":["pages/Variables/Variables.styled.js","pages/Variables/Variables.jsx","services/Api.jsx","constants/constants.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WraperInfo = styled.div`\n  display: inline-flex;\n  padding-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const WraperInfoFilm = styled.div`\n  margin-left: 40px;\n`;\n\nexport const GanresFilm = styled.span`\n  margin-right: 40px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from 'services/Api';\nimport { WraperInfo } from './Variables.styled';\n\nconst Variables = () => {\n  const { variable } = useParams();\n  const [variablesInfo, setVariablesInfo] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const car = await api.getCarVariables(variable);\n      if (car) {\n        setVariablesInfo(car.data);\n      }\n    };\n    fetchMovies();\n  }, [variable]);\n\n  console.log(variablesInfo);\n\n  return (\n    <WraperInfo>\n      <ul>\n        <li>\n          <p>DataType: \"string\"</p>\n        </li>\n        <li>\n          <p>\n            Description: \"\n            <p>\n              This field stores any other battery information that does not\n              belong to any of the other battery related fields.\n            </p>\n            \"\n          </p>\n        </li>\n        <li>\n          <p></p>\n        </li>\n        <li>\n          <p></p>\n        </li>\n        <li>\n          <p></p>\n        </li>\n      </ul>\n    </WraperInfo>\n  );\n};\n\nexport default Variables;\n","import axios from 'axios';\nimport { constantsApi } from 'constants/constants';\nimport { toast } from 'react-toastify';\n\nexport const api = axios.create({\n  baseURL: constantsApi.BASE_URL,\n});\n\nexport const getDecodeVIN = async searchInput => {\n  try {\n    const decodeVin = await api.get(\n      `/vehicles/DecodeVin/${searchInput}?format=json`\n    );\n    if (decodeVin) {\n      return decodeVin.data.Results;\n    }\n    if (decodeVin.data.Results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getCarVariables = async variable => {\n  try {\n    const carVariables = await api.get(\n      `/vehicles/GetVehicleVariableList?format=json`\n    );\n    if (carVariables) {\n      return carVariables;\n    }\n    if (carVariables.data.Results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n","export const constantsApi = {\n  BASE_URL: 'https://vpic.nhtsa.dot.gov/api/',\n};\n"],"names":["WraperInfo","styled","variable","useParams","useState","variablesInfo","setVariablesInfo","useEffect","fetchMovies","api","car","data","console","log","axios","baseURL","getDecodeVIN","searchInput","get","decodeVin","Results","length","toast","getCarVariables","carVariables"],"sourceRoot":""}