{"version":3,"file":"static/js/99.0711a021.chunk.js","mappings":"sRAEaA,EAAaC,EAAAA,GAAAA,IAAH,6G,GAMDA,EAAAA,GAAAA,IAAH,2DAKWA,EAAAA,GAAAA,IAAH,8CAIDA,EAAAA,GAAAA,KAAH,+C,QCyBvB,EArCkB,WAChB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0CE,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGACSC,EAAAA,KADT,QACZC,EADY,SAGhBJ,EAAiBI,EAAaC,KAAKC,SAHnB,2CAAH,qDAMjBJ,MACC,IAEH,IAMMK,EALGR,EAAcS,QAAO,SAAAC,GAC1B,OAAOb,EAAGc,SAASD,EAAEb,OAMzB,OACE,SAACF,EAAD,UACGa,EAAaI,KAAI,SAAAC,GAAW,OAC3B,2BACE,iCAAShB,MACT,kCAAUgB,EAAYC,SACtB,uCAAeD,EAAYE,aAC3B,0CAAkBF,EAAYG,gBAC9B,wCAAgBH,EAAYI,eALrBJ,EAAYhB,W,4IC1BhBO,EAAMc,IAAAA,OAAa,CAC9BC,QCJU,oCDOCC,EAAY,mCAAG,WAAMC,GAAN,gGAEAjB,EAAIkB,IAAJ,8BACCD,EADD,iBAFA,YAElBE,EAFkB,iDAMfA,EAAUjB,KAAKC,SANA,UAQc,IAAlCgB,EAAUjB,KAAKC,QAAQiB,OARH,yCASfC,EAAAA,GAAAA,KACL,mUAVoB,kFAcjBA,EAAAA,GAAAA,KAAA,OAdiB,0DAAH,sDAkBZC,EAAe,mCAAG,WAAMC,GAAN,gGAEAvB,EAAIkB,IAAJ,gDAFA,YAErBM,EAFqB,iDAMlBA,GANkB,UAQc,IAArCA,EAAatB,KAAKC,QAAQiB,OARH,yCASlBC,EAAAA,GAAAA,KACL,mUAVuB,kFAcpBA,EAAAA,GAAAA,KAAA,OAdoB,0DAAH","sources":["pages/Variables/Variables.styled.js","pages/Variables/Variables.jsx","services/Api.jsx","constants/constants.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WraperInfo = styled.div`\n  display: inline-flex;\n  padding-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const WraperInfoFilm = styled.div`\n  margin-left: 40px;\n`;\n\nexport const GanresFilm = styled.span`\n  margin-right: 40px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as api from 'services/Api';\nimport { WraperInfo } from './Variables.styled';\n\nconst Variables = () => {\n  const { ID } = useParams();\n  const [variablesInfo, setVariablesInfo] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const infoVariable = await api.getCarVariables();\n      if (infoVariable) {\n        setVariablesInfo(infoVariable.data.Results);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  const filterVariable = () => {\n    return variablesInfo.filter(v => {\n      return ID.includes(v.ID);\n    });\n  };\n\n  const oneVariables = filterVariable();\n\n  return (\n    <WraperInfo>\n      {oneVariables.map(oneVariable => (\n        <ul key={oneVariable.ID}>\n          <li>ID: {ID}</li>\n          <li>name:{oneVariable.Name}</li>\n          <li>DataType: {oneVariable.DataType}</li>\n          <li>Description: {oneVariable.Description}</li>\n          <li>GroupName: {oneVariable.GroupName}</li>\n        </ul>\n      ))}\n    </WraperInfo>\n  );\n};\n\nexport default Variables;\n","import axios from 'axios';\nimport { constantsApi } from 'constants/constants';\nimport { toast } from 'react-toastify';\n\nexport const api = axios.create({\n  baseURL: constantsApi.BASE_URL,\n});\n\nexport const getDecodeVIN = async searchInput => {\n  try {\n    const decodeVin = await api.get(\n      `/vehicles/DecodeVin/${searchInput}?format=json`\n    );\n    if (decodeVin) {\n      return decodeVin.data.Results;\n    }\n    if (decodeVin.data.Results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getCarVariables = async variable => {\n  try {\n    const carVariables = await api.get(\n      `/vehicles/GetVehicleVariableList?format=json`\n    );\n    if (carVariables) {\n      return carVariables;\n    }\n    if (carVariables.data.Results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n","export const constantsApi = {\n  BASE_URL: 'https://vpic.nhtsa.dot.gov/api/',\n};\n"],"names":["WraperInfo","styled","ID","useParams","useState","variablesInfo","setVariablesInfo","useEffect","fetchMovies","api","infoVariable","data","Results","oneVariables","filter","v","includes","map","oneVariable","Name","DataType","Description","GroupName","axios","baseURL","getDecodeVIN","searchInput","get","decodeVin","length","toast","getCarVariables","variable","carVariables"],"sourceRoot":""}