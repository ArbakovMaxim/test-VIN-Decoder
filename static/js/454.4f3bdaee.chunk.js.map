{"version":3,"file":"static/js/454.4f3bdaee.chunk.js","mappings":"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","sources":["pages/FilmInfo/FilmInfo.styled.js","components/ui/Btn.styled.js","components/MoviesInfo/MoviesInfo.styled.js","components/MoviesInfo/MoviesInfo.jsx","components/AdditionalInformation/AdditionalInformation.styled.js","components/AdditionalInformation/AdditionalInformation.jsx","pages/FilmInfo/FilmInfo.jsx","constants/constants.js","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GanresFilm = styled.span`\n  margin-right: 40px;\n`;\n\nexport const Wraper = styled.div`\n  margin-top: 16px;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Btn = styled(NavLink)`\n  padding: 8px;\n  background-color: blue;\n  color: white;\n  text-decoration: none;\n  &:hover {\n    color: green;\n    background-color: orange;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const WraperInfo = styled.div`\n  display: inline-flex;\n  padding-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 400px;\n`;\n\nexport const WraperInfoFilm = styled.div`\n  margin-left: 40px;\n`;\n\nexport const GanresFilm = styled.span`\n  margin-right: 40px;\n`;\n","import {\n  GanresFilm,\n  Poster,\n  WraperInfo,\n  WraperInfoFilm,\n} from './MoviesInfo.styled';\n\nexport const MoviesInfo = ({ moviesInfo, img }) => {\n  return (\n    <WraperInfo>\n      <Poster src={img} alt=\"\" />\n      <WraperInfoFilm>\n        <h2>{moviesInfo.original_title}</h2>\n        <p>Popularity:{moviesInfo.popularity}</p>\n        <h3>Overview</h3>\n        <p>{moviesInfo.overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {moviesInfo.genres.map(({ id, name }) => (\n            <GanresFilm key={id}>{name}</GanresFilm>\n          ))}\n        </p>\n      </WraperInfoFilm>\n    </WraperInfo>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const WraperAdditionalInformation = styled.div`\n  padding-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\n\nexport const ListFilmInfo = styled.ul`\n  list-style: none;\n`;\n\nexport const LinkFilmSInfo = styled(NavLink)`\n  text-decoration: none;\n  &:hover {\n    color: green;\n  }\n`;\n","import {\n  LinkFilmSInfo,\n  ListFilmInfo,\n  WraperAdditionalInformation,\n} from './AdditionalInformation.styled';\n\nexport const AdditionalInformation = () => {\n  return (\n    <WraperAdditionalInformation>\n      <h3>Additional information</h3>\n      <ListFilmInfo>\n        <li>\n          <LinkFilmSInfo to=\"cast\">Cast</LinkFilmSInfo>\n        </li>\n        <li>\n          <LinkFilmSInfo to=\"reviews\">Reviews</LinkFilmSInfo>\n        </li>\n      </ListFilmInfo>\n    </WraperAdditionalInformation>\n  );\n};\n","import 'react-toastify/dist/ReactToastify.css';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as api from 'services/Api';\nimport { Wraper } from './FilmInfo.styled';\nimport { Btn } from 'components/ui/Btn.styled';\nimport { MoviesInfo } from 'components/MoviesInfo/MoviesInfo';\nimport { AdditionalInformation } from 'components/AdditionalInformation/AdditionalInformation';\n\nconst FilmInfo = () => {\n  const { id } = useParams('');\n  const [moviesInfo, setMoviesInfo] = useState([]);\n  const location = useLocation();\n  const [saveLocation, setsaveLocation] = useState('');\n\n  useEffect(() => {\n    if (location.state) {\n      setsaveLocation(location.state.from);\n    }\n\n    const fetchMovies = async () => {\n      const movies = await api.getMoviesInfo(id);\n      if (movies) {\n        setMoviesInfo(movies.data);\n      }\n    };\n    fetchMovies();\n  }, [id, location.state]);\n\n  const img = `https://image.tmdb.org/t/p/w500/${moviesInfo.poster_path}`;\n\n  return (\n    <>\n      <Btn to={saveLocation}> Back </Btn>\n      <Wraper>\n        {moviesInfo.poster_path && (\n          <>\n            <MoviesInfo img={img} moviesInfo={moviesInfo} />\n            <AdditionalInformation />\n            <Outlet />\n          </>\n        )}\n      </Wraper>\n    </>\n  );\n};\n\nexport default FilmInfo;\n","export const constantsApi = {\n  API_KEY: '40792e31f61894f4069807b40dd76a51',\n  BASE_URL: 'https://api.themoviedb.org/3/',\n};\n","import axios from 'axios';\nimport { constantsApi } from 'constants/constants';\nimport { toast } from 'react-toastify';\n\nexport const api = axios.create({\n  baseURL: constantsApi.BASE_URL,\n  params: {\n    api_key: constantsApi.API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getMoviesTrending = async () => {\n  try {\n    const movies = await api.get(`trending/movie/day`);\n    if (movies) {\n      return movies.data.results;\n    }\n    if (movies.data.results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const actor = await api.get(`movie/${id}/credits`);\n    if (actor) {\n      return actor.data.cast;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesReviews = async id => {\n  try {\n    const author = await api.get(`movie/${id}/reviews`);\n    if (author) {\n      return author.data.results;\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getSearchMovies = async search => {\n  try {\n    const movies = await api.get(`search/movie`, {\n      params: {\n        query: search,\n      },\n    });\n    if (movies) {\n      return movies.data.results;\n    }\n  } catch (error) {\n    toast.info(error);\n  }\n};\n\nexport const getMoviesInfo = async id => {\n  try {\n    const movies = await api.get(`movie/${id}`);\n    if (movies) {\n      return movies;\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n"],"names":["Wraper","styled","Btn","NavLink","WraperInfo","Poster","WraperInfoFilm","GanresFilm","MoviesInfo","moviesInfo","img","src","alt","original_title","popularity","overview","genres","map","id","name","WraperAdditionalInformation","ListFilmInfo","LinkFilmSInfo","AdditionalInformation","to","useParams","useState","setMoviesInfo","location","useLocation","saveLocation","setsaveLocation","useEffect","state","from","fetchMovies","api","movies","data","poster_path","constantsApi","axios","baseURL","params","api_key","language","include_adult","getMoviesTrending","get","results","length","toast","getMoviesCast","actor","cast","console","log","getMoviesReviews","author","getSearchMovies","search","query","getMoviesInfo"],"sourceRoot":""}