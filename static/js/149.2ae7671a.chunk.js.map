{"version":3,"file":"static/js/149.2ae7671a.chunk.js","mappings":"6MAGaA,EAAiBC,EAAAA,GAAAA,GAAH,6CAIdC,EAAiBD,EAAAA,GAAAA,GAAH,gDAIdE,GAAqBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uF,SCLlBI,EAAW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACjC,OACE,SAACP,EAAD,UACGM,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACR,EAAD,WACE,SAACC,EAAD,CAAoBQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAAxD,SACGG,KAFgBD,U,yLCRhBK,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,kBAAmB,IAErBC,SAAU,SAAAC,GACRN,EAAOM,MAGX,OACE,kBAAMD,SAAUJ,EAAOM,aAAvB,WACE,kBACEC,KAAK,oBACLC,KAAK,OACLC,SAAUT,EAAOU,aACjBC,MAAOX,EAAOK,OAAOF,qBAGvB,mBAAQK,KAAK,SAAb,wB,UCoCN,EAhDe,WACb,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM1B,GAAW2B,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAS,UAAGJ,EAAaK,IAAI,iBAApB,QAAiC,GAC5CD,GACFE,EAAYF,KAGb,IAEH,IAAME,EAAW,mCAAG,WAAMC,GAAN,0EACE,KAAhBA,EADc,iEAIGC,EAAAA,GAAoBD,GAJvB,QAIZjC,EAJY,SAOhBwB,EAAgBxB,GAEI,IAAlBA,EAAOmC,QACTC,EAAAA,GAAAA,KACE,kUAXc,2CAAH,sDAuBjB,OACE,iCACE,0BACE,SAAC5B,EAAD,CAAYC,OAVG,SAAC,GAA2B,IAAzBI,EAAwB,EAAxBA,kBACtBc,EACwB,KAAtBd,EAA2B,CAAEwB,OAAQxB,GAAsB,IAE7DmB,EAAYnB,SAQV,0BACE,SAACd,EAAA,EAAD,CAAUC,OAAQuB,EAActB,SAAUA,W,0MClDrCqC,EACF,mCADEA,EAED,gC,UCECJ,EAAMK,IAAAA,OAAa,CAC9BC,QAASF,EACTG,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVC,eAAe,KAINC,EAAiB,mCAAG,6GAERX,EAAIH,IAAJ,sBAFQ,YAEvB/B,EAFuB,iDAIpBA,EAAO8C,KAAKC,SAJQ,UAMM,IAA/B/C,EAAO8C,KAAKC,QAAQZ,OANK,yCAOpBC,EAAAA,GAAAA,KACL,mUARyB,kFAYtBA,EAAAA,GAAAA,KAAA,OAZsB,0DAAH,qDAgBjBY,EAAa,mCAAG,WAAM7C,GAAN,gGAEL+B,EAAIH,IAAJ,gBAAiB5B,EAAjB,aAFK,YAEnB8C,EAFmB,iDAIhBA,EAAMH,KAAKI,MAJK,uDAOzBC,QAAQC,IAAR,MAPyB,yDAAH,sDAWbC,EAAgB,mCAAG,WAAMlD,GAAN,gGAEP+B,EAAIH,IAAJ,gBAAiB5B,EAAjB,aAFO,YAEtBmD,EAFsB,iDAInBA,EAAOR,KAAKC,SAJO,gFAOrBX,EAAAA,GAAAA,KAAA,OAPqB,yDAAH,sDAWhBmB,EAAe,mCAAG,WAAMlB,GAAN,gGAENH,EAAIH,IAAJ,eAAwB,CAC3CU,OAAQ,CACNe,MAAOnB,KAJgB,YAErBrC,EAFqB,iDAQlBA,EAAO8C,KAAKC,SARM,uDAW3BX,EAAAA,GAAAA,KAAA,MAX2B,yDAAH,sDAefqB,EAAa,mCAAG,WAAMtD,GAAN,gGAEJ+B,EAAIH,IAAJ,gBAAiB5B,IAFb,YAEnBH,EAFmB,iDAIhBA,GAJgB,gFAOlBoC,EAAAA,GAAAA,KAAA,OAPkB,yDAAH","sources":["components/ListFilm/ListFilm.styled.js","components/ListFilm/ListFilm.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","constants/constants.js","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListFilmStyled = styled.ul`\n  list-style: none;\n`;\n\nexport const ItemFilmStyled = styled.li`\n  margin-bottom: 1rem;\n`;\n\nexport const ItemLinkFilmStyled = styled(NavLink)`\n  text-decoration: none;\n  &:hover {\n    color: green;\n  }\n`;\n","import {\n  ItemFilmStyled,\n  ItemLinkFilmStyled,\n  ListFilmStyled,\n} from './ListFilm.styled';\n\nexport const ListFilm = ({ movies, location }) => {\n  return (\n    <ListFilmStyled>\n      {movies.map(({ id, title }) => (\n        <ItemFilmStyled key={id}>\n          <ItemLinkFilmStyled to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </ItemLinkFilmStyled>\n        </ItemFilmStyled>\n      ))}\n    </ListFilmStyled>\n  );\n};\n","import { useFormik } from 'formik';\n\nexport const SearchForm = ({ submit }) => {\n  const formik = useFormik({\n    initialValues: {\n      searchMoviesInput: '',\n    },\n    onSubmit: values => {\n      submit(values);\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <input\n        name=\"searchMoviesInput\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.searchMoviesInput}\n      />\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n","import 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport * as api from 'services/Api';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { ListFilm } from 'components/ListFilm/ListFilm';\n\nconst Movies = () => {\n  const [searchMovies, setsearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const searchUrl = searchParams.get('search') ?? '';\n    if (searchUrl) {\n      fetchMovies(searchUrl);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const fetchMovies = async searchInput => {\n    if (searchInput === '') {\n      return;\n    }\n    const movies = await api.getSearchMovies(searchInput);\n\n    if (movies) {\n      setsearchMovies(movies);\n    }\n    if (movies.length === 0) {\n      toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  };\n\n  const handleSubmit = ({ searchMoviesInput }) => {\n    setSearchParams(\n      searchMoviesInput !== '' ? { search: searchMoviesInput } : {}\n    );\n    fetchMovies(searchMoviesInput);\n  };\n\n  return (\n    <>\n      <div>\n        <SearchForm submit={handleSubmit} />\n      </div>\n      <div>\n        <ListFilm movies={searchMovies} location={location} />\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","export const constantsApi = {\n  API_KEY: '40792e31f61894f4069807b40dd76a51',\n  BASE_URL: 'https://api.themoviedb.org/3/',\n};\n","import axios from 'axios';\nimport { constantsApi } from 'constants/constants';\nimport { toast } from 'react-toastify';\n\nexport const api = axios.create({\n  baseURL: constantsApi.BASE_URL,\n  params: {\n    api_key: constantsApi.API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\nexport const getMoviesTrending = async () => {\n  try {\n    const movies = await api.get(`trending/movie/day`);\n    if (movies) {\n      return movies.data.results;\n    }\n    if (movies.data.results.length === 0) {\n      return toast.info(\n        'по вашему запросу не чего не найденно,ищите что-то адекватное. '\n      );\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const actor = await api.get(`movie/${id}/credits`);\n    if (actor) {\n      return actor.data.cast;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesReviews = async id => {\n  try {\n    const author = await api.get(`movie/${id}/reviews`);\n    if (author) {\n      return author.data.results;\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n\nexport const getSearchMovies = async search => {\n  try {\n    const movies = await api.get(`search/movie`, {\n      params: {\n        query: search,\n      },\n    });\n    if (movies) {\n      return movies.data.results;\n    }\n  } catch (error) {\n    toast.info(error);\n  }\n};\n\nexport const getMoviesInfo = async id => {\n  try {\n    const movies = await api.get(`movie/${id}`);\n    if (movies) {\n      return movies;\n    }\n  } catch (error) {\n    return toast.info(error);\n  }\n};\n"],"names":["ListFilmStyled","styled","ItemFilmStyled","ItemLinkFilmStyled","NavLink","ListFilm","movies","location","map","id","title","to","state","from","SearchForm","submit","formik","useFormik","initialValues","searchMoviesInput","onSubmit","values","handleSubmit","name","type","onChange","handleChange","value","useState","searchMovies","setsearchMovies","useSearchParams","searchParams","setSearchParams","useLocation","useEffect","searchUrl","get","fetchMovies","searchInput","api","length","toast","search","constantsApi","axios","baseURL","params","api_key","language","include_adult","getMoviesTrending","data","results","getMoviesCast","actor","cast","console","log","getMoviesReviews","author","getSearchMovies","query","getMoviesInfo"],"sourceRoot":""}